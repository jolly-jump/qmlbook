# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012-2014 Jürgen Bocklage-Ryannel and Johan Thelin. This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License
# This file is distributed under the same license as the Qt5 Cadaques Book package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qt5 Cadaques Book 2015-03\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-01-25 23:25+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: T. Küchel <t.kuechel@humboldt-ka.de>, 2018\n"
"Language-Team: Italian (https://www.transifex.com/qmlbook/teams/82765/it/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: it\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../ch01/index.rst:3
msgid "Meet Qt 5"
msgstr "Introduzione a Qt 5"

#: ../../ch01/index.rst:11
msgid ""
"The source code of this chapter can be found in the `assets folder "
"<../../assets>`_."
msgstr ""
"Il codice sorgente associato a questo capitolo è disponibile nella cartella "
"`assets <../../assets>`_."

#: ../../ch01/index.rst:13
msgid ""
"This book shall provide you a walk through the different aspect of "
"application development using Qt version 5.x. It focuses on the new Qt Quick"
" technology but also provides necessary information of writing C++ back-ends"
" and extension for Qt Quick."
msgstr ""
"Questo libro vuole offrire una panoramica sui diversi aspetti legati allo "
"sviluppo di applicazioni con Qt, versione 5.x. Il libro è incentrato sulla "
"nuova tecnologia di Qt Quick, ma allo stesso tempo fornisce le informazioni "
"necessarie per scrivere back-end in C++, come anche estensioni per Qt Quick."

#: ../../ch01/index.rst:15
msgid ""
"This chapter provides a high level overview of Qt 5. It shows the different "
"application models available for developers and a Qt 5 showcase application "
"to get a sneak preview of things to come. Additionally the chapter aims to "
"provide a wide overview of the Qt 5 content and how to get in touch with the"
" makers of Qt 5."
msgstr ""
"Questo capitolo fornisce una visione d'insieme di Qt 5. Il capitolo mostra "
"sia le varie tipologie di applicazione a disposizione degli sviluppatori che"
" un'applicazione dimostrativa, in modo da fornire un'anteprima degli "
"argomenti che verranno affrontati. Inoltre, il capitolo vuole offrire una "
"panoramica sul contenuto di Qt 5 e mostrare come entrare in contatto con i "
"suoi creatori."

#: ../../ch01/index.rst:19
msgid "Preface"
msgstr "Prefazione"

#: ../../ch01/index.rst:22
msgid "History"
msgstr "Storia"

#: ../../ch01/index.rst:23
msgid ""
"Qt 4 has evolved since 2005 and provided a solid ground for thousands of "
"applications and even full desktop and mobile systems. The usage patterns of"
" computer users changed in the recent years. From stationary PCs towards "
"portable notebook and nowadays mobile computers. The classical desktop is "
"more and more replaced with mobile touch-based always connected screens. "
"With it the desktop UX paradigms also changes. Where as in the past Windows "
"UI has dominated the world we spend more time nowadays on other screens with"
" another UI language."
msgstr ""
"Qt 4 ha visto un progresso costante dal 2005, ed ha rappresentato una base "
"solida per migliaia di applicazioni, e persino sistemi desktop e mobile "
"completi.- Negli ultimi anni, gli utenti dei personal computer hanno "
"modificato considerevolmente le proprie abitudini di utilizzo. Dai PC da "
"tavolo si è passati ai notebook portatili e, infine, ai computer tascabili. "
"Il desktop classico viene via via rimpiazzato da schermi portatili, basati "
"sul touch e costantemente connessi. Questi cambiamenti vanno di passo con "
"cambiamenti nella User Experience anche su desktop. Mentre nel passato le "
"interfacce utente di Windows dominavano il mondo, oggigiorno spendiamo più "
"tempo su schermi di altro tipo e interfacce che utilizzano un linguaggio "
"differente."

#: ../../ch01/index.rst:25
msgid ""
"Qt 4 was designed to satisfy the desktop world to have a coherent set of UI "
"widgets available on all major platforms. The challenge for Qt users has "
"changed today and it lies more to provide a touch-based user interface for a"
" customer driven user interface and to enable modern user interface on all "
"major desktop and mobile systems. Qt 4.7 started to introduce the Qt Quick "
"technology which allows users to create a set of user interface components "
"from simple elements to achieve a complete new UI, driven by customer "
"demands."
msgstr ""
"Qt 4 è stato disegnato per soddisfare il mondo desktop e per fornire un set "
"di widget per interfacce utente su tutte le maggiori piattaforme. La sfida "
"per gli utenti di Qt oggi è cambiata, e la sfida principale è quella di "
"fornire interfacce utente basate sul touch, i cui requisiti vengono definiti"
" dai clienti, e che devono essere in grado di fornire un'esperienza d'uso "
"moderna su tutti i maggiori sistemi desktop e mobile. Qt 4.7 ha introdotto "
"la tecnologia QtQuick, che permette agli utenti di creare una serie di "
"componenti UI partendo da elementi semplici, per poter così ottenere "
"interfacce utente completamente nuove, definite dalle richieste dei clienti."

#: ../../ch01/index.rst:28
msgid "Qt 5 Focus"
msgstr "Il focus di Qt5"

#: ../../ch01/index.rst:30
msgid ""
"Qt 5 is a complete refreshing of the very successful Qt 4 release. With Qt "
"4.8, the Qt 4 release is almost 7 years old. It's time to make an amazing "
"toolkit even more amazing. Qt 5 is focused on the following:"
msgstr ""
"Qt 5 è una versione completamente rinnovata rispetto alla release di grande "
"successo di Qt 4. Con la versione 4.8, Qt 4 ha ormai 7 anni. Era quindi il "
"momento di rendere un toolkit eccezionale ancora migliore. Qt 5 è incentrato"
" sui seguenti aspetti:"

#: ../../ch01/index.rst:32
msgid ""
"**Outstanding Graphics**: Qt Quick 2 is based on OpenGL (ES) using a scene "
"graph implementation. The recomposed graphics stack allows a new level of "
"graphic effects combined with an ease of use never seen before in this "
"field."
msgstr ""
"**Grafica eccellente**: Qt Quick 2 si appoggia su OpenGL (ES) e utilizza "
"un'implementazione basata su scene graph. Questa nuova composizione dello "
"stack grafico consente di raggiungere nuovi livelli in termini di effetti "
"grafici, combinati ad una semplicità di utilizzo mai vista prima in questo "
"campo."

#: ../../ch01/index.rst:34
msgid ""
"**Developer Productivity**: QML and JavaScript are the primary means for UI "
"creation. The back-end will be driven by C++. The split between JavaScript "
"and C++ allows a fast iteration for front-end developers concentrating on "
"creating beautiful user interfaces and back-end C++ developers concentrating"
" on stability, performance and extending the runtime."
msgstr ""
"**Produttività degli sviluppatori**: QML e JavaScript sono gli strumenti "
"principali per la creazione delle UI. Il back-end sarà gestito dal codice in"
" C++. La divisione netta tra JavaScript e C++ consente iterazioni rapide sia"
" per gli sviluppatori front-end, che possono così concentrarsi sulla "
"creazione di interfacce utente eleganti, sia per gli sviluppatori back-end "
"in C++, che si possono concentrare su stabilità, performance ed estensioni "
"del runtime."

#: ../../ch01/index.rst:36
msgid ""
"**Cross-platform portability**: With the consolidated Qt Platform "
"Abstraction, it is now possible to port Qt to a wider range of platforms "
"easier and faster. Qt 5 is structured around the concept of Qt Essentials "
"and Add-ons, which allows OS developer to focus on the essentials modules "
"and leads to a smaller runtime altogether."
msgstr ""
"**Portabilità cross-platform**: Con la tecnologia consolidata della Qt "
"Platform Abstraction, è ora possibile portare Qt su una gamma più ampia di "
"piattaforme in maniera più semplice e rapida. Qt 5 si fonda sul concetto di "
"Qt Essentials e di Add-ons, che consente agli sviluppatori OS di "
"concentrarsi sui moduli essenziali e permette inoltre di ottenere dei "
"runtime di dimensioni inferiori."

#: ../../ch01/index.rst:38
msgid ""
"**Open Development**: Qt is now a truly open-governance project hosted at "
"`qt.io <http://qt.io>`_. The development is open and community driven."
msgstr ""
"**Sviluppo Open**: Qt è ora veramente un progetto di tipo open-governance, "
"ospitato su `Qt-Project <http://qt-project.org>`_. Lo sviluppo è open e "
"guidato dalla community."

#: ../../ch01/index.rst:43
msgid "Qt 5 Introduction"
msgstr "Introduzione a Qt5"

#: ../../ch01/index.rst:47 ../../ch01/index.rst:225
msgid "Qt Quick"
msgstr "Qt Quick"

#: ../../ch01/index.rst:49
msgid ""
"Qt Quick is the umbrella term for the user interface technology used in Qt "
"5. Qt Quick itself is a collection of several technologies:"
msgstr ""
"Qt Quick è il termine onnicomprensivo per la tecnologia dell'interfaccia "
"utente utilizzata in Qt5. Qt Quick di per sé è una collezione di diverse "
"tecnologie:"

#: ../../ch01/index.rst:51
msgid "QML - Markup language for user interfaces"
msgstr "QML - Linguaggio markup per interfacce utente"

#: ../../ch01/index.rst:52
msgid "JavaScript - The dynamic scripting language"
msgstr "JavaScript - Il linguaggio di scripting dinamico"

#: ../../ch01/index.rst:53
msgid "Qt C++ - The highly portable enhanced c++ library"
msgstr "Qt C++ - La libreria c++ avanzata altamente portabile"

#: ../../ch01/index.rst:58
msgid ""
"Similar to HTML, QML is a markup language. It is composed of tags called "
"elements in Qt Quick enclosed in curly brackets ``Item {}``. It was designed"
" from the ground up for the creation of user interfaces, speed and easier "
"reading for developers. The user interface can be enhanced using JavaScript "
"code. Qt Quick is easily extendable with your own native functionality using"
" Qt C++. In short the declarative UI is called the front-end and the native "
"parts are called the back-end. This allows you to separate the computing "
"intensive and native operation of your application from the user interface "
"part."
msgstr ""
"Similmente ad HTML, QML è un linguaggio di markup. E' costituito da tags che"
" in QtQuick vengono chiamati elementi, i quali vengono racchiusi in "
"parentesi graffe ``Item {}``. E' stato progettato fin dall'origine per la "
"creazione di interfacce utente, per la velocità e per essere di facile "
"lettura per gli sviluppatori. L'interfaccia utente può essere potenziata "
"tramite l'utilizzo di codice JavaScript. Qt Quick è facilmente estendibile "
"con funzionalità native custom tramite Qt C++. Sinteticamente, la UI "
"dichiarativa viene chiamata front-end e le parti native vengono chiamate "
"back-end. La distinzione permette di separare le operazioni native e "
"computazionalmente onerose di un'applicazione dalla parte dell'interfaccia "
"grafica."

#: ../../ch01/index.rst:60
msgid ""
"In a typical project the front-end is developed in QML/JavaScript and the "
"back-end code, which interfaces with the system and does the heavy lifting, "
"is developed using Qt C++. This allows a natural split between the more "
"design oriented developers and the functional developers. Typically the "
"back-end is tested using Qt own unit testing framework and exported for the "
"front-end developers to be used."
msgstr ""
"In un progetto tipico, il front-end viene sviluppato in QML/JavaScript, "
"mentre il codice back-end, che si interfaccia col sistema e si occupa del "
"lavoro pesante, viene sviluppato usando Qt C++. Ciò permette una divisione "
"naturale tra gli sviluppatori più orientati al design e gli sviluppatori "
"funzionali. Tipicamente, il back-end viene testato utilizzando il testing "
"framework proprio di Qt, e viene quindi esportato per l'utilizzo da parte "
"degli sviluppatori front-end."

#: ../../ch01/index.rst:64
msgid "Digesting an User Interface"
msgstr "Assimilare un'Interfaccia Utente"

#: ../../ch01/index.rst:66
msgid ""
"Let's create a simple user interface using Qt Quick, which showcases some "
"aspects of the QML language. At the end we will have a paper windmill with "
"rotating blades."
msgstr ""
"Usando QtQuick, creeremo ora una semplice interfaccia utente che dimostra "
"alcuni aspetti del linguaggio QML. Il risultato finale sarà una girandola "
"con le pale che ruotano."

#: ../../ch01/index.rst:73
msgid ""
"We start with an empty document called ``main.qml``. All QML files will have"
" the ending ``.qml``. As a markup language (like HTML) a QML document needs "
"to have one and only one root element, which in our case is the ``Image`` "
"element with a width and height based on the background image geometry:"
msgstr ""
"Cominciamo da un documento vuoto che chiamiamo ``main.qml``. Tutti i file "
"QML conterranno l'estensione ``.qml``. Essendo un linguaggio di markup (come"
" l'HTML) un documento QML deve avere uno e uno solo elemento radice che, nel"
" nostro caso, è l'elemento ``Image``, che ha larghezza e altezza basate "
"sulla geometria dell'immagine di sfondo:"

#: ../../ch01/index.rst:84
msgid ""
"As QML does not make any restriction which element type is the root element "
"we use an ``Image`` element with the source property set to our background "
"image as the root element."
msgstr ""
"Poiché il QML non pone alcun tipo di restrizione sul tipo di elemento che "
"può essere l'elemento radice, utilizziamo un elemento ``Image`` con la "
"proprietà source (sorgente) settata all'immagine di background."

#: ../../ch01/index.rst:92
msgid ""
"Each element has properties, e.g. an image has a ``width``, ``height`` but "
"also other properties like a ``source`` property.  The size of the image "
"element is automatically deduced from the image size. Otherwise we would "
"need to set the ``width`` and ``height`` property to some useful pixel "
"values."
msgstr ""
"Ogni elemento ha diverse proprietà, per esempio un'immagine ha le proprietà "
"``width``, ``height`` come anche altre proprietà, quali ``source``. Le "
"dimensioni dell'elemento Image vengono desunte automaticamente dalle "
"dimensioni dell'immagine sorgente. In alternativa, dovremmo settare le "
"proprietà ``width`` e ``height`` a valori in pixel che siano ragionevoli."

#: ../../ch01/index.rst:94
msgid ""
"The most standard elements are located in the ``QtQuick`` module which we "
"include in the first line with the import statement."
msgstr ""
"Gli elementi più comuni sono localizzati nel modulo ``QtQuick`` che abbiamo "
"incluso nella prima riga con la dichiarazione di import."

#: ../../ch01/index.rst:96
msgid ""
"The ``id`` special property is optional and contains an identifier to "
"reference this element later in other places in the document. Important: An "
"``id`` property cannot be changed after it has been set and it cannot be set"
" during runtime. Using ``root`` as the id for the root-element is just a "
"habit by the author and makes referencing the top-most element predictable "
"in larger QML documents."
msgstr ""
"La proprietà speciale ``id`` è opzionale e contiene un identificativo per "
"fare riferimento all'elemento in altre sezioni del documento. Importante: "
"Una proprietà ``id`` non può venire modificata dopo che è stata creata, e "
"non può venire settata al runtime. L'utilizzo di ``root`` come id per "
"l'elemento radice è solo un'abitudine dell'autore che permette di fare "
"riferimento all'elemento più in alto nella gerarchia in documenti QML di una"
" certa lunghezza."

#: ../../ch01/index.rst:98
msgid ""
"The foreground elements pole and pin wheel of our user interface are placed "
"as separate images."
msgstr ""
"Gli elementi in primo piano dell'interfaccia utente (l'asta e la girandola) "
"sono localizzati in immagini separate."

#: ../../ch01/index.rst:103
msgid ""
"The pole needs to be placed in the horizontal center of the background "
"towards the bottom. And the pinwheel can be placed in the center of the "
"background."
msgstr ""
"L'asta (pole) va posizionata al centro orizontale dello sfondo, verso il "
"basso. E la girandola (pinwheel) va posizionata al centro dello sfondo."

#: ../../ch01/index.rst:105
msgid ""
"Normally your user interface will be composed of many different element "
"types and not only image elements like in this example."
msgstr ""
"Di regola l'interfaccia utente sarà composta da molti elementi di tipo "
"differente, e non solo immagini come in questo esempio."

#: ../../ch01/index.rst:130
msgid ""
"To place the pin wheel at the central location we use a complex property "
"called ``anchor``. Anchoring allows you to specify geometric relations "
"between parent and sibling objects. E.g. Place me in the center of another "
"element ( ``anchors.centerIn: parent`` ). There are left, right, top, "
"bottom, centerIn, fill, verticalCenter and horizontalCenter relations on "
"both ends. Sure, they need to match.  It does not make sense to anchor my "
"left side to the top side of an element."
msgstr ""
"Per posizionare la girandola al centro utilizziamo una proprietà complessa "
"chiamata ``anchor``. L'ancoraggio permette di specificare relazioni "
"geometriche tra oggetti che hanno relazione padre-figlio e fratelli. Es.: "
"Posizionami al centro di un altro elemento (``anchors.centerIn:parent``). Da"
" entrambe le parti, sono disponibili le seguenti relazioni: left, right, "
"top, bottom, centerIn, fill, verticalCenter e horizontalCenter. E' "
"necessario che le relazioni siano concordanti: per esempio, non ha senso "
"ancorare il lato sinistro (left) di un elemento al lato superiore (top) di "
"un altro elemento."

#: ../../ch01/index.rst:132
msgid "So we set the pinwheel to be centered in the parent our background."
msgstr ""
"Quindi, andiamo a settare la girandola come centrata rispetto al genitore "
"(parent), l'immagine di sfondo."

#: ../../ch01/index.rst:136
msgid ""
"Sometime you will need to make small adjustments on the exact centering. "
"This would be possible with ``anchors.horizontalCenterOffset`` or with "
"``anchors.verticalCenterOffset``. Similar adjustments properties are also "
"available to all the other anchors. Please consult the documentation for a "
"full list of anchors properties."
msgstr ""
"A volte sarà necessario effettuare piccoli aggiustamenti rispetto alla "
"centratura esatta. Questa operazione è resa possibile dalle proprietà "
"``anchors.horizontalCenterOffset`` e ``anchors.verticalCenterOffset``. "
"Proprietà di aggiustamento simili sono disponibili anche per tutti gli altri"
" punti di ancoraggio. Per una lista completa delle proprietà di ancoraggio, "
"consultare la documentazione."

#: ../../ch01/index.rst:140
msgid ""
"Placing an image as a child element of our root element (the ``Image`` "
"element) shows an important concept of a declarative language. You describe "
"the user interface in the order of layers and grouping, where the topmost "
"layer (our rectangle) is drawn first and the child layers are drawn on top "
"of it in the local coordinate system of the containing element."
msgstr ""
"Posizionare un'immagine come elemento figlio del rettangolo radice mostra un"
" aspetto importante dei linguaggi dichiarativi. L'interfaccia utente viene "
"descritta seguendo l'ordine di livelli e gruppi, dove il livello più alto "
"(il nostro rettangolo) è il primo ad essere disegnato, mentre i livelli "
"figli vengono disegnati davanti ad esso, secondo il sistema di coordinate "
"locale dell'elemento contenitore."

#: ../../ch01/index.rst:142
msgid ""
"To make the showcase a little bit more interesting, we would like to make "
"the scene interactive. The idea is to rotate the wheel when the user pressed"
" the mouse somewhere in the scene."
msgstr ""
"Per rendere questa dimostrazione più interessante, potremmo ora rendere la "
"scena interattiva. L'idea è quella di rotare la girandola quando l'utente "
"preme il tasto del mouse da qualche parte nella scena."

#: ../../ch01/index.rst:145
msgid ""
"We use the ``MouseArea`` element and make it as big as our root element."
msgstr ""
"Per fare questo, utilizziamo l'elemento ``MouseArea`` e gli attribuiamo le "
"stesse dimensioni dell'elemento radice."

#: ../../ch01/index.rst:159
msgid ""
"The mouse area emit signals when a user clicks inside it covered area. You "
"can hook onto this signal overriding the ``onClicked`` function. In this "
"case the reference the wheel image and change its rotation by +90 degree."
msgstr ""
"L'area del mouse emette dei segnali (signals) quando l'utente clicca al suo "
"interno. E' possibile intercettare questo segnale sovrascrivendo la funzione"
" ``onClicked``. Nel caso specifico, facciamo riferimento alla girandola e ne"
" modifichiamo la rotazione di +90 gradi."

#: ../../ch01/index.rst:163
msgid ""
"This works for every signal, the naming is ``on`` + ``SignalName`` in title "
"cases. Also all properties emit a signal when their value changed. The "
"naming is:"
msgstr ""
"Questo meccanismo funziona per ogni segnale, la convenzione per il nome "
"della funzione è ``on`` + ``NomeDelSegnale``. Inoltre, tutte le proprietà "
"emettono un segnale una volta che il loro valore è cambiato. La convenzione "
"per il nome è:"

#: ../../ch01/index.rst:165
msgid "``on`` + ``PropertyName`` + ``Changed``"
msgstr "``on`` + ``NomeProprietà`` + ``Changed``"

#: ../../ch01/index.rst:167
msgid ""
"If a ``width`` property is changing you can observe it with "
"``onWidthChanged: print(width)`` for example."
msgstr ""
"Per esempio, se una proprietà ``width`` cambia, è possibile osservarla con "
"``onWidthChanged: print(width)``."

#: ../../ch01/index.rst:169
msgid ""
"Now the wheel will rotate, but it is still not fluid yet. The rotation "
"property changes immediately. What we would like that the property changes "
"by 90 degree over time. Now animations come into play. An animation defines "
"how a property change is distributed over a duration. To enable this we use "
"an animation type called property behavior. The ``Behaviour`` does specify "
"an animation for a defined property for every change applied to that "
"property. In short every time the property changes, the animation is run. "
"This is only one of several ways of declaring an animation in QML."
msgstr ""
"Ora la girandola ruota, ma non in modo fluido. La proprietà rotation cambia "
"immediatamente. Invece, vorremmo che la proprietà cambiasse di 90 gradi in "
"un arco di tempo. A questo punto entrano in gioco le animazioni. "
"Un'animazione definisce come il cambio di una proprietà debba essere "
"distribuito lungo un periodo di tempo. Per abilitare questo comportamento, "
"utilizziamo un tipo di animazione chiamato property behavior. Il "
"``Behaviour`` (comportamento) specifica un'animazione per una certa "
"proprietà che si applica ad ogni cambiamento di quella proprietà. In breve, "
"ogni volta che la proprietà cambia, l'animazione viene lanciata. Questo è "
"solo uno dei tanti modi che esistono per dichiarare un'animazione in QML."

#: ../../ch01/index.rst:185
msgid ""
"Now whenever the property rotation of the wheel changes it will be animated "
"using a ``NumberAnimation`` with a duration of 250 ms. So each 90 degree "
"turn will take 250 ms."
msgstr ""
"Ora, ogniqualvolta la proprietà rotation della girandola cambia, essa verrà "
"animata utilizzando una ``NumberAnimation`` della durata di 250 ms. Ovvero, "
"ogni rotazione di 90 gradi impiegherà 250 ms."

#: ../../ch01/index.rst:190
msgid ""
"You will not actually see the wheel blurred. This is just to indicate the "
"rotation. But a blurred wheel is in the assets folder. Maybe you want to try"
" to use that."
msgstr ""
"In realtà, la girandola non apparirà sfocata. Lo sfocamento serve solo ad "
"indicare la rotazione. Tuttavia, nella cartella degli assets è presente una "
"girandola sfocata. Forse vuoi provare ad utilizzarla."

#: ../../ch01/index.rst:193
msgid ""
"Now the wheel looks already much better. I hope this has given you a short "
"idea of how Qt Quick programming works."
msgstr ""
"Ora la girandola ha già un aspetto molto migliore. Spero che questo esempio "
"ti abbia dato una prima impressione di come funzioni la programmazione in Qt"
" Quick."

#: ../../ch01/index.rst:196
msgid "Qt Building Blocks"
msgstr "Gli ingredienti di Qt"

#: ../../ch01/index.rst:198
msgid ""
"Qt 5 consists of a large amount of modules. A module in general is a library"
" for the developer to use. Some modules are mandatory for a Qt enabled "
"platform. They form a set called *Qt Essentials Modules*. Many modules are "
"optional and form the *Qt Add-On Modules*. It's expected that the majority "
"of developers will not have the need to use them, but it's good to know them"
" as they provide invaluable solutions to common challenges."
msgstr ""
"Qt 5 consiste di una grande quantità di moduli. Generalmente, un modulo è "
"una libreria che può essere utilizzata dallo sviluppatore. Alcuni moduli "
"sono obbligatori per ogni piattaforma che supporta Qt. Tali moduli formano "
"un insieme chiamato *Qt Essentials Modules*. Molti moduli sono opzionali e "
"formano i *Qt Add-On Modules*. E' probabile che la maggior parte degli "
"sviluppatori non abbia bisogno di tali moduli, ma conoscerli è buona cosa in"
" quanto essi forniscono soluzioni egregie a problemi ricorrenti."

#: ../../ch01/index.rst:201
msgid "Qt Modules"
msgstr "I moduli Qt"

#: ../../ch01/index.rst:203
msgid ""
"The Qt Essentials modules are mandatory for a Qt enabled platform. They "
"offer the foundation to develop a modern Qt 5 Application using Qt Quick 2."
msgstr ""
"I Qt Essentials modules sono obbligatori per ogni piattaforma che supporta "
"Qt. Essi forniscono le basi per sviluppare un'applicazione Qt 5 moderna "
"utilizzando Qt Quick 2."

#: ../../ch01/index.rst:206
msgid "Core-Essential Modules"
msgstr "Core-Essential Modules"

#: ../../ch01/index.rst:207
msgid "The minimal set of Qt 5 modules to start QML programming."
msgstr "Il set minimo di moduli Qt 5 per iniziare la programmazione in QML."

#: ../../ch01/index.rst:213
msgid "Module"
msgstr "Modulo"

#: ../../ch01/index.rst:214
msgid "Description"
msgstr "Descrizione"

#: ../../ch01/index.rst:215
msgid "Qt Core"
msgstr "Qt Core"

#: ../../ch01/index.rst:216
msgid "Core non-graphical classes used by other modules"
msgstr "Le classi fondamentali non grafiche utilizzate dagli altri moduli"

#: ../../ch01/index.rst:217
msgid "Qt GUI"
msgstr "Qt GUI"

#: ../../ch01/index.rst:218
msgid ""
"Base classes for graphical user interface (GUI) components. Includes OpenGL."
msgstr ""
"Classi base per componenti di interfaccia grafica utente (GUI). Include "
"OpenGL."

#: ../../ch01/index.rst:219
msgid "Qt Multimedia"
msgstr "Qt Multimedia"

#: ../../ch01/index.rst:220
msgid "Classes for audio, video, radio and camera functionality."
msgstr "Classi per funzionalità audio, video, radio e camera."

#: ../../ch01/index.rst:221
msgid "Qt Network"
msgstr "Qt Network"

#: ../../ch01/index.rst:222
msgid "Classes to make network programming easier and more portable."
msgstr ""
"Classi che rendono la programmazione di rete più semplice e portabile."

#: ../../ch01/index.rst:223
msgid "Qt QML"
msgstr "Qt QML"

#: ../../ch01/index.rst:224
msgid "Classes for QML and JavaScript languages."
msgstr "Classi per i linguaggi QML e JavaScript."

#: ../../ch01/index.rst:226
msgid ""
"declarative framework for building highly dynamic applications with custom "
"user interfaces."
msgstr ""
"Framework dichiarativo per la costruzione di applicazioni altamente "
"dinamiche con interfacce utente personalizzate."

#: ../../ch01/index.rst:227
msgid "Qt SQL"
msgstr "Qt SQL"

#: ../../ch01/index.rst:228
msgid "Classes for database integration using SQL."
msgstr "Classi per l'integrazione di database utilizzando SQL."

#: ../../ch01/index.rst:229
msgid "Qt Test"
msgstr "Qt Test"

#: ../../ch01/index.rst:230
msgid "Classes for unit testing Qt applications and libraries."
msgstr "Classi per lo unit testing di applicazioni e librerie Qt."

#: ../../ch01/index.rst:231
msgid "Qt WebKit"
msgstr "Qt WebKit"

#: ../../ch01/index.rst:232
msgid ""
"Classes for a WebKit2 based implementation and a new QML API. See also Qt "
"WebKit Widgets in the add-on modules."
msgstr ""
"Classi per un'implementazione basata su WebKit2 ed una nuova API in QML. "
"Vedi anche Qt WebKit Widgets nei moduli add-on."

#: ../../ch01/index.rst:233
msgid "Qt WebKit Widgets"
msgstr "Qt WebKit Widgets"

#: ../../ch01/index.rst:234
msgid "WebKit1 and QWidget-based classes from Qt 4."
msgstr "Classi di Qt 4 basate su WebKit1 e QWidget."

#: ../../ch01/index.rst:235
msgid "Qt Widgets"
msgstr "Qt Widgets"

#: ../../ch01/index.rst:236
msgid "Classes to extend Qt GUI with C++ widgets."
msgstr "Classi per estendere Qt GUI con widget C++."

#: ../../ch01/index.rst:250
msgid "Qt Addon Modules"
msgstr "Moduli Addon Qt"

#: ../../ch01/index.rst:251
msgid ""
"Besides the essential modules, Qt offers additional modules for software "
"developers, which are not part of the release. Here is a short list of add-"
"on modules available."
msgstr ""
"Oltre ai moduli essenziali, Qt offre agli sviluppatori software moduli "
"addizionali che non fanno parte della distribuzione. Ecco un breve elenco di"
" moduli addizionali disponibili."

#: ../../ch01/index.rst:253
msgid ""
"Qt 3D - A set of APIs to make 3D graphics programming easy and declarative."
msgstr ""
"Qt 3D - Una serie di API che rendono la programmazione grafica 3D semplice e"
" dichiarativa."

#: ../../ch01/index.rst:254
msgid ""
"Qt Bluetooth - C++ and QML APIs for platforms using Bluetooth wireless "
"technology."
msgstr ""
"Qt Bluetooth - API in C++ e QML per piattaforme che utilizzano la tecnologia"
" wireless Bluetooth."

#: ../../ch01/index.rst:255
msgid ""
"Qt Contacts - C++ and QML APIs for accessing addressbooks / contact "
"databases"
msgstr ""
"Qt Contacts - API in C++ e QML per accedere alle rubriche e ai database dei "
"contatti."

#: ../../ch01/index.rst:256
msgid ""
"Qt Location - Provides location positioning, mapping, navigation and place "
"search via QML and C++ interfaces. NMEA backend for positioning"
msgstr ""
"Qt Location - Mette a disposizione posizionamento, mappe, navigazione e "
"ricerca dei luoghi tramite interfacce QML e C++. back-end NMEA per il "
"posizionamento"

#: ../../ch01/index.rst:257
msgid ""
"Qt Organizer - C++ and QML APIs for accessing organizer events (todos, "
"events, etc.)"
msgstr ""
"Qt Organizer - API in C++ e QML per accedere agli eventi dell'agenda (memo, "
"eventi, etc.)."

#: ../../ch01/index.rst:258
msgid "Qt Publish and Subscribe"
msgstr "Qt Publish and Subscribe"

#: ../../ch01/index.rst:259
msgid "Qt Sensors - Access to sensors via QML and C++ interfaces."
msgstr "Qt Sensors - Accesso ai sensori tramite interfacce QML e C++."

#: ../../ch01/index.rst:260
msgid ""
"Qt Service Framework -  Enables applications to read, navigate and subscribe"
" to change notifications."
msgstr ""
"Qt Service Framework - Permette alle applicazioni di leggere, sfogliare e "
"sottoscrivere notifiche di cambiamento."

#: ../../ch01/index.rst:261
msgid "Qt System Info - Discover system related information and capabilities."
msgstr ""
"Qt System Info - Per accedere alle informazioni e capacità del sistema."

#: ../../ch01/index.rst:262
msgid "Qt Versit - Support for vCard and iCalendar formats"
msgstr "Qt Versit - Supporto per i formati vCard e iCalendar."

#: ../../ch01/index.rst:263
msgid ""
"Qt Wayland - Linux only. Includes Qt Compositor API (server), and Wayland "
"platform plugin (clients)"
msgstr ""
"Qt Wayland - Solo per Linux. Include l'API Qt Compositor (server), e il "
"plugin per piattaforme Wayland (clients)."

#: ../../ch01/index.rst:264
msgid "Qt Feedback - Tactile and audio feedback to user actions."
msgstr "Qt Feedback - Riscontro tattile e audio alle azioni degli utenti."

#: ../../ch01/index.rst:265
msgid "Qt JSON DB - A no-SQL object store for Qt."
msgstr "Qt JSON DB - Un sistema di immagazzinamento dati non basato su SQL."

#: ../../ch01/index.rst:269
msgid ""
"As these modules are not part of the release the state differ between "
"modules, depending how many contributors are active and how well it's get "
"tested."
msgstr ""
"Poiché questi moduli non fanno parte della distribuzione, il loro stato "
"varia, a seconda di quanti contributori siano attivi e di quanto vengano "
"testati."

#: ../../ch01/index.rst:272
msgid "Supported Platforms"
msgstr "Piattaforme Supportate"

#: ../../ch01/index.rst:274
msgid ""
"Qt supports a variety of platforms. All major desktop and embedded platforms"
" are supported. Through the Qt Application Abstraction, nowadays it's easier"
" to port Qt over to your own platform if required."
msgstr ""
"Qt supporta numerose piattaforme. Tutte le maggiori piattaforme sia desktop "
"che embedded sono supportate. Tramite la Qt Application Abstraction, oggi "
"risulta più semplice portare Qt sulla tua piattaforma, se necessario."

#: ../../ch01/index.rst:276
msgid ""
"Testing Qt 5 on a platform is time consuming. A sub-set of platforms was "
"selected by the Qt Project to build the reference platforms set. These "
"platforms are thoroughly tested through the system testing to ensure the "
"best quality. Mind you though: no code is error free."
msgstr ""
"Testare Qt 5 su una piattaforma è dispendioso in termini di tempo. Un "
"sottoinsieme delle piattaforme è stato selezionato dal qt-project per "
"costituire il gruppo delle piattaforme di riferimento. Queste piattaforme "
"vengono testate approfonditamente per assicurarne la qualità. Ma attenzione:"
" non esiste codice completamente privo di errori."

#: ../../ch01/index.rst:282
msgid "Qt Project"
msgstr "Il Qt Project"

#: ../../ch01/index.rst:284
msgid "From the `Qt Project wiki <http://wiki.qt.io/>`_:"
msgstr "Dalla `wiki del qt-project <http://wiki.qt-project.org>`_:"

#: ../../ch01/index.rst:286
msgid ""
"\"The Qt Project is a meritocratic consensus-based community interested in "
"Qt. Anyone who shares that interest can join the community, participate in "
"its decision making processes, and contribute to Qt’s development.\""
msgstr ""
"\"Il Qt Project è una community meritocratica e basata sul consenso "
"interessata a Qt. Chiunque sia interessato può unirsi alla community, "
"partecipare ai processi decisionali, e contribuire allo sviluppo di Qt.\""

#: ../../ch01/index.rst:288
msgid ""
"The Qt Project is an organisation which developes the open-source part of "
"the Qt further. It forms the base for other users to contribute. The biggest"
" contributor is DIGIA, which holds also the comercial rights to Qt."
msgstr ""
"Il Qt-Project è un'organizzazione che porta avanti lo sviluppo della parte "
"open-source di Qt. Costituisce la base a cui altri utenti possono "
"contribuire. Il contributore maggiore è DIGIA, che detiene anche i diritti "
"commerciali di Qt."

#: ../../ch01/index.rst:290
msgid ""
"Qt has an open-source aspect and a comercial aspect for companies. The "
"comercial aspect is for companies which can not or will not comply with the "
"open-source licenses. Without the comercial aspect these companies would not"
" be able to use Qt and it would not allow DIGIA to contribute so much code "
"to the Qt Project."
msgstr ""
"Qt ha un lato open-source e un lato commerciale. Il lato commerciale è "
"riservato a quelle aziende che non soddisfano le licenze di tipo open-"
"source. Senza l'aspetto commerciale, queste aziende non sarebbero in grado "
"di usare Qt, e DIGIA non sarebbe in grado di contribuire con così tanto "
"codice al Qt-Project."

#: ../../ch01/index.rst:292
msgid ""
"There are many companies world-wide, which make their living out of "
"consultancy and product development using Qt on the various platforms. There"
" are many open-source projects and open-source developers, which rely on Qt "
"as their major development library. It feels good to be part of this vibrant"
" community and to work with this awesome tools and libraries. Does it make "
"you a better person? Maybe:-)"
msgstr ""
"Ci sono molte aziende in tutto il modo che sussistono grazie alle consulenze"
" e allo sviluppo di prodotti con Qt sule varie piattaforme. Ci sono molti "
"progetti e sviluppatori open-source che si affidano a Qt come libreria "
"principale per lo sviluppo. E' bello far parte di questa comunità molto "
"attiva e lavorare con tool e librerie eccezionali. Questo ti rende una "
"persona migliore? Forse :-)"

#: ../../ch01/index.rst:294
msgid "**Contribute here: http://wiki.qt.io/**"
msgstr "**Contribuisci qui: http://wiki.qt-project.org**"
